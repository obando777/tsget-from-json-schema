/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type AccountResource = DepositAccount | CreditAccount | GeneralLedgerAccount | BatchAccount;

export interface AccountsDocument {
  data: AccountResource[];
}
export interface DepositAccount {
  type?: "depositAccount";
  id?: string;
  attributes: {
    createdAt: string;
    name: string;
    depositProduct: string;
    routingNumber: string;
    accountNumber?: string;
    secondaryAccountNumber?: {
      routingNumber: string;
      accountNumber: string;
    };
    currency: "USD";
    balance: number;
    overdraftLimit?: number;
    hold: number;
    available: number;
    tags: Tags;
    status: "Open" | "Closed" | "Frozen";
    closeReason?: "ByCustomer" | "Fraud";
    fraudReason?:
      | "ACHActivity"
      | "CardActivity"
      | "CheckActivity"
      | "ApplicationHistory"
      | "AccountActivity"
      | "ClientIdentified"
      | "IdentityTheft"
      | "LinkedToFraudulentCustomer";
    closeReasonText?: string;
    freezeReason?: string;
    maskedAccountNumber?: string;
    isOverdrawnWithinLimit?: boolean;
    dacaStatus?: "Activated" | "Entered";
    updatedAt?: string;
  };
  relationships:
    | {
        [k: string]: unknown;
      }
    | {
        [k: string]: unknown;
      };
}
export interface Tags {
  /**
   * This interface was referenced by `Tags`'s JSON-Schema definition
   * via the `patternProperty` "^[a-zA-Z0-9_]{1,128}$".
   */
  [k: string]: string;
}
export interface CreditAccount {
  type?: "creditAccount";
  id?: string;
  attributes: {
    createdAt: string;
    name: string;
    creditTerms: string;
    currency: "USD";
    balance: number;
    hold: number;
    available: number;
    tags: Tags;
    status: "Open" | "Closed" | "Frozen";
    closeReason?: "ByCustomer" | "Fraud" | "Overdue";
    fraudReason?:
      | "ACHActivity"
      | "CardActivity"
      | "CheckActivity"
      | "ApplicationHistory"
      | "AccountActivity"
      | "ClientIdentified"
      | "IdentityTheft"
      | "LinkedToFraudulentCustomer";
    closeReasonText?: string;
    freezeReason?: string;
    creditLimit: number;
    updatedAt?: string;
  };
  relationships: {
    customer: CustomerLinkage;
  };
}
export interface CustomerLinkage {
  data: {
    type: "customer" | "businessCustomer" | "individualCustomer";
    id: string;
  };
}
export interface GeneralLedgerAccount {
  type?: "glAccount";
  id?: string;
  attributes?: {
    createdAt: string;
    name: string;
    currency: "USD";
    balance: number;
    hold: number;
    available: number;
    category: "Asset" | "Liability";
    status?: "Open" | "Closed";
    closeReason?: "ByCustomer" | "Fraud";
    fraudReason?:
      | "ACHActivity"
      | "CardActivity"
      | "CheckActivity"
      | "ApplicationHistory"
      | "AccountActivity"
      | "ClientIdentified"
      | "IdentityTheft"
      | "LinkedToFraudulentCustomer";
  };
}
export interface BatchAccount {
  type?: "batchAccount";
  id?: string;
  attributes?: {
    createdAt: string;
    name: string;
    depositProduct: string;
    currency: "USD";
    routingNumber: string;
    accountNumber?: string;
    balance: number;
    hold: number;
    available: number;
    status?: "Open" | "Closed";
    closeReason?: "ByCustomer" | "Fraud";
    fraudReason?:
      | "ACHActivity"
      | "CardActivity"
      | "CheckActivity"
      | "ApplicationHistory"
      | "AccountActivity"
      | "ClientIdentified"
      | "IdentityTheft"
      | "LinkedToFraudulentCustomer";
    maskedAccountNumber?: string;
  };
  relationships?: {
    org: OrgRelationship;
  };
}
export interface OrgRelationship {
  data: {
    id: string;
    type: "org";
  };
}
