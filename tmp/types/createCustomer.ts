/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateCustomer {
  data: CreateBusinessCustomer | CreateIndividualCustomer;
}
export interface CreateBusinessCustomer {
  type: "businessCustomer";
  attributes: {
    name: string;
    dba?: string;
    ein: string;
    entityType: "Corporation" | "LLC" | "Partnership";
    dateOfIncorporation?: string;
    stateOfIncorporation: string;
    purpose?: string;
    phone: Phone | Phone1;
    address: Address | Address1 | Address2;
    contact: Contact;
    tags?: Tags;
    authorizedUsers?: AuthorizedUser[];
  };
  relationships: Relationships;
}
export interface Phone {
  countryCode: string;
  number: string;
}
export interface Phone1 {
  countryCode: string;
  number: string;
}
export interface Address {
  street: string;
  street2?: string | null;
  city: string;
  state: string;
  postalCode: string;
  country: "US";
}
export interface Address1 {
  street: string;
  street2?: string | null;
  city: string;
  state: string;
  postalCode: string;
  country: "CA";
}
export interface Address2 {
  street: string;
  street2?: string | null;
  city: string;
  state?: null | string;
  postalCode: string;
  country: string;
}
export interface Contact {
  fullName?: FullName;
  email?: string;
  phone?: Phone | Phone1;
  jwtSubject?: string | null;
}
export interface FullName {
  first: string;
  last: string;
}
export interface Tags {
  /**
   * This interface was referenced by `Tags`'s JSON-Schema definition
   * via the `patternProperty` "^[a-zA-Z0-9_]{1,128}$".
   */
  [k: string]: string;
}
export interface AuthorizedUser {
  fullName: FullName;
  email: string;
  phone: Phone | Phone1;
  jwtSubject?: string | null;
}
export interface Relationships {
  org: OrgRelationship;
}
export interface OrgRelationship {
  data: {
    id: string;
    type: "org";
  };
}
export interface CreateIndividualCustomer {
  type: "individualCustomer";
  attributes: {
    fullName: FullName;
    email: string;
    phone: Phone | Phone1;
    ssn?: string;
    passport?: string;
    nationality?: string;
    matriculaConsular?: string;
    address: Address | Address1 | Address2;
    dateOfBirth: string;
    dba?: string;
    ein?: string;
    soleProprietorship?: boolean;
    tags?: Tags;
    authorizedUsers?: AuthorizedUser[];
    jwtSubject?: string | null;
  };
  relationships: Relationships;
}
