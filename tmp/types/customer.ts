/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Customer = Individual | Business | Trust;

export interface CustomerDocument {
  data: Customer;
}
export interface Individual {
  id: string;
  type: "individualCustomer";
  attributes: {
    createdAt: string;
    fullName: FullName;
    email?: string;
    phone?: Phone | Phone1;
    ssn?: string;
    passport?: string;
    nationality?: string;
    matriculaConsular?: string;
    address?: Address | Address1 | Address2;
    dateOfBirth?: string;
    ein?: string;
    dba?: string;
    soleProprietorship?: boolean & string;
    tags?: Tags;
    riskRate?: "low" | "medium" | "high";
    maskedSSN?: string;
    maskedPassport?: string;
    maskedMatriculaConsular?: string;
    authorizedUsers?: AuthorizedUser[];
    jwtSubject?: string | null;
    status: "Active" | "Archived";
    archiveReason?:
      | "Inactive"
      | "FraudACHActivity"
      | "FraudCardActivity"
      | "FraudCheckActivity"
      | "FraudApplicationHistory"
      | "FraudAccountActivity"
      | "FraudClientIdentified"
      | "FraudLinkedToFraudulentCustomer";
  };
  relationships?: Relationships;
}
export interface FullName {
  first: string;
  last: string;
}
export interface Phone {
  countryCode: string;
  number: string;
}
export interface Phone1 {
  countryCode: string;
  number: string;
}
export interface Address {
  street: string;
  street2?: string | null;
  city: string;
  state: string;
  postalCode: string;
  country: "US";
}
export interface Address1 {
  street: string;
  street2?: string | null;
  city: string;
  state: string;
  postalCode: string;
  country: "CA";
}
export interface Address2 {
  street: string;
  street2?: string | null;
  city: string;
  state?: null | string;
  postalCode: string;
  country: string;
}
export interface Tags {
  /**
   * This interface was referenced by `Tags`'s JSON-Schema definition
   * via the `patternProperty` "^[a-zA-Z0-9_]{1,128}$".
   */
  [k: string]: string;
}
export interface AuthorizedUser {
  fullName: FullName;
  email: string;
  phone: Phone | Phone1;
  jwtSubject?: string | null;
}
export interface Relationships {
  org?: OrgRelationship;
  application?: {
    type?: "businessApplication" | "individualApplication";
    id?: string;
  };
}
export interface OrgRelationship {
  data: {
    id: string;
    type: "org";
  };
}
export interface Business {
  id: string;
  type: "businessCustomer";
  attributes: {
    createdAt?: string;
    name: string;
    dba?: string | null;
    ein?: string;
    entityType: "Corporation" | "LLC" | "Partnership";
    dateOfIncorporation?: string;
    stateOfIncorporation: string;
    purpose?: string;
    phone?: Phone | Phone1;
    address?: Address | Address1 | Address2;
    contact: Contact;
    tags?: Tags;
    riskRate?: "low" | "medium" | "high";
    authorizedUsers?: AuthorizedUser[];
    status: "Active" | "Archived";
    archiveReason?:
      | "Inactive"
      | "FraudACHActivity"
      | "FraudCardActivity"
      | "FraudCheckActivity"
      | "FraudApplicationHistory"
      | "FraudAccountActivity"
      | "FraudClientIdentified"
      | "FraudLinkedToFraudulentCustomer";
  };
  relationships?: Relationships;
}
export interface Contact {
  fullName?: FullName;
  email?: string;
  phone?: Phone | Phone1;
  jwtSubject?: string | null;
}
export interface Trust {
  id: string;
  type: "trustCustomer";
  attributes: {
    createdAt?: string;
    name: string;
    stateOfIncorporation: string;
    contact: Contact1;
    tags?: Tags;
    revocability?: "Revocable" | "Irrevocable";
    sourceOfFunds?: "Inheritance" | "Salary" | "Savings" | "InvestmentReturns" | "Gifts";
    taxId?: string;
    riskRate?: "low" | "medium" | "high";
    authorizedUsers?: AuthorizedUser[];
    status: "Active" | "Archived";
    archiveReason?:
      | "Inactive"
      | "FraudACHActivity"
      | "FraudCardActivity"
      | "FraudCheckActivity"
      | "FraudApplicationHistory"
      | "FraudAccountActivity"
      | "FraudClientIdentified"
      | "FraudLinkedToFraudulentCustomer";
  };
  relationships?: Relationships;
}
export interface Contact1 {
  fullName?: FullName;
  email?: string;
  phone?: Phone | Phone1;
  address?: Address | Address1 | Address2;
  jwtSubject?: string | null;
}
